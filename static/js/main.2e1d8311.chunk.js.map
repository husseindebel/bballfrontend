{"version":3,"sources":["models/BBallModels.ts","components/BBallMatchStats.tsx","services/BBallDataRetriever.ts","components/BBallMatchCard.tsx","components/PlayerStatsModal.tsx","components/BBallMatchPanel.tsx","components/BBallSeason.tsx","serviceWorker.ts","index.tsx"],"names":["MatchState","BBallMatchStats","withStyles","theme","createStyles","_ref","matchStats","handleModalAction","classes","react_default","a","createElement","index_es","padding","align","homeTeamStats","map","n","key","player","number","component","scope","size","onClick","ModalState","Open","name","threePointsMade","fieldGoalsMade","freeThrowsMade","rebounds","assists","steals","blocks","fieldGoalsAttempted","isNaN","toFixed","threePointsAttempted","freeThrowsAttempted","turnovers","foulsGiven","parseBBallData","data","default","match","status","matchStatus","Complete","Incomplete","getTotalAveragePlayerStats","playerName","matchData","bballData","totalStats","playerData","flatMap","filter","playerStats","reduce","prevStats","currentStats","totalPoints","foulsDrawn","Object","objectSpread","getTotalPlayerStats","pointsPerGame","length","assistsPerGame","reboundsPerGame","blocksPerGame","stealsPerGame","fieldGoalPercentage","threePointPercentage","freePointPercentage","turnoversPerGame","PlayerStatsModal","root","flexGrow","paper","spacing","unit","margin","backgroundColor","palette","background","boxShadow","shadows","position","width","outline","top","left","marginLeft","marginTop","aria-labelledby","aria-describedby","open","onClose","Close","undefined","className","container","direction","item","xs","justify","style","cursor","BBallMatchCard","display","flexDirection","matchCardRight","textAlign","secondary","main","matchCardMiddle","matchCardLeft","primary","matchContainer","matchText","fontSize","arrowIcon","expand","transform","transition","transitions","create","duration","shortest","expandOpen","initState","expanded","modalOpen","currentPlayer","_React$useState","React","useState","_React$useState2","slicedToArray","cardState","changeCardState","modalState","Fragment","matchNumber","date","Typography_default","homeTeam","homeTeamScore","awayTeamScore","classnames","defineProperty","aria-expanded","aria-label","ExpandMore_default","awayTeam","in","timeout","unmountOnExit","BBallMatchPanel","seasonMatches","reverse","console","log","createMuiTheme","colour","light","contrastText","core_styles","matchId","BBallSeason","openModal","state","matches","Boolean","window","location","hostname","ReactDOM","render","components_BBallSeason","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2e1d8311.chunk.js","sourcesContent":["export interface Player {\r\n    name: string;\r\n    number: number;\r\n    team: Team;\r\n}\r\n\r\nexport interface Team {\r\n    name: string;\r\n    colour: string; \r\n    players: Player[] | undefined;\r\n}\r\n\r\nexport interface Match {\r\n    matchId: number,\r\n    homeTeam: Team;\r\n    awayTeam: Team;\r\n    date: string;\r\n    status: string;\r\n    matchNumber: string;\r\n    matchStats: MatchStats;\r\n}\r\n\r\nexport enum MatchState {\r\n    Complete,\r\n    Incomplete\r\n}\r\n\r\nexport interface CompleteMatchStats {\r\n    homeTeamScore: number;\r\n    awayTeamScore: number;\r\n    homeTeamStats: PlayerStats[];\r\n    matchStatus: MatchState.Complete;\r\n}\r\n\r\nexport interface PlayerStats {\r\n    player: Player;\r\n    totalPoints: number;\r\n    fieldGoalsAttempted: number;\r\n    fieldGoalsMade: number;\r\n    threePointsAttempted: number;\r\n    threePointsMade: number;\r\n    freeThrowsAttempted: number;\r\n    freeThrowsMade: number;\r\n    assists: number;\r\n    rebounds: number;\r\n    steals: number;\r\n    blocks: number;\r\n    turnovers: number;\r\n    foulsGiven: number;\r\n    foulsDrawn: number;\r\n}\r\n\r\nexport interface AveragePlayerStats {\r\n    player: Player;\r\n    pointsPerGame: number;\r\n    assistsPerGame: number;\r\n    stealsPerGame: number;\r\n    blocksPerGame: number;\r\n    reboundsPerGame: number;\r\n    fieldGoalsAttempted: number;\r\n    fieldGoalsMade: number;\r\n    threePointsAttempted: number;\r\n    threePointsMade: number;\r\n    fieldGoalPercentage: number;\r\n    threePointPercentage: number;\r\n    freePointPercentage: number;\r\n    turnoversPerGame: number;\r\n}\r\n\r\nexport interface IncompleteMatch {\r\n    matchStatus: MatchState.Incomplete;\r\n}\r\n\r\nexport type MatchStats = CompleteMatchStats | IncompleteMatch;\r\n\r\nexport interface BBallSeason {\r\n    matches: Match[]\r\n}","import React from 'react';\r\nimport { CardContent, Typography, Theme, WithStyles, createStyles, withStyles, Table, TableHead, TableRow, TableCell, TableBody, Button } from '@material-ui/core';\r\nimport { Match, CompleteMatchStats, Player } from '../models/BBallModels';\r\nimport { getTotalAveragePlayerStats } from '../services/BBallDataRetriever';\r\nimport { ModalState } from './BBallMatchCard';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n  matchStats: CompleteMatchStats;\r\n  handleModalAction: (modalState: ModalState, player: Player) => void;\r\n}\r\n\r\n/*\r\n  PTS\r\n  REB\r\n  AST\r\n  STL\r\n  BLK\r\n  FGM\r\n  FGA\r\n  FG%\r\n  3PM\r\n  3PA\r\n  3P%\r\n  FTM\r\n  FTMA\r\n  FT%\r\n  TOV\r\n*/\r\n\r\nexport const BBallMatchStats = withStyles(styles)(({ matchStats, handleModalAction, classes }: Props) => {\r\n  \r\n  return (\r\n    <CardContent>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Player Name</TableCell>\r\n            <TableCell padding='checkbox' align='center'>PTS</TableCell>\r\n            <TableCell padding='checkbox' align='center'>REB</TableCell>\r\n            <TableCell padding='checkbox' align='center'>AST</TableCell>\r\n            <TableCell padding='checkbox' align='center'>STL</TableCell>\r\n            <TableCell padding='checkbox' align='center'>BLK</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FGM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FGA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FG%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3PM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3PA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3P%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FTM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FTA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FT%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>TOV</TableCell>\r\n            <TableCell padding='checkbox' align='center'>PF</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {matchStats.homeTeamStats.map(n => {\r\n            return (\r\n              <TableRow key={n.player.number}>\r\n                <TableCell padding='checkbox' component=\"th\" scope=\"row\">\r\n                <Button size=\"small\" onClick={() => handleModalAction(ModalState.Open, n.player)}> {n.player.number}  {n.player.name}</Button>\r\n                </TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsMade*3 + (n.fieldGoalsMade - n.threePointsMade)*2 +  n.freeThrowsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.rebounds}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.assists}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.steals}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.blocks}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.fieldGoalsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.fieldGoalsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.fieldGoalsMade/n.fieldGoalsAttempted) ? 0 : \r\n                  ((n.fieldGoalsMade/n.fieldGoalsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.threePointsMade/n.threePointsAttempted) ? 0 : \r\n                  ((n.threePointsMade/n.threePointsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.freeThrowsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.freeThrowsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.freeThrowsMade/n.freeThrowsAttempted) ? 0 : \r\n                  ((n.freeThrowsMade/n.freeThrowsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.turnovers}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.foulsGiven}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </CardContent>\r\n  )\r\n});","import { Match, MatchState, PlayerStats, CompleteMatchStats, AveragePlayerStats, MatchStats } from \"../models/BBallModels\";\r\nimport * as bballData from '../models/data.json';\r\n\r\n\r\nexport function parseBBallData(data: any): Match[] {\r\n    const matches: Match[] = data.default;\r\n    matches.map(match => {\r\n      match.status === \"complete\" ? match.matchStats.matchStatus = MatchState.Complete : match.matchStats.matchStatus = MatchState.Incomplete;    \r\n    })\r\n    return data.default;\r\n}\r\n\r\nconst getTotalPlayerStats = (matchData: MatchStats[], playerName: string): PlayerStats => {\r\n    const playerMatchData = matchData.flatMap((match) => {\r\n        if (match.matchStatus === MatchState.Incomplete) return [];\r\n        var playerMatches = match.homeTeamStats.filter((playerStats => playerStats.player.name === playerName));\r\n        return playerMatches;\r\n    });\r\n    const playerData = playerMatchData.reduce((prevStats, currentStats) => {\r\n        return {\r\n            player: prevStats.player,\r\n            fieldGoalsAttempted: prevStats.fieldGoalsAttempted + currentStats.fieldGoalsAttempted,\r\n            totalPoints: 0,\r\n            fieldGoalsMade: prevStats.fieldGoalsMade + currentStats.fieldGoalsMade,\r\n            threePointsAttempted: prevStats.threePointsAttempted + currentStats.threePointsAttempted,\r\n            threePointsMade: prevStats.threePointsMade + currentStats.threePointsMade,\r\n            freeThrowsAttempted: prevStats.freeThrowsAttempted + currentStats.freeThrowsAttempted,\r\n            freeThrowsMade: prevStats.freeThrowsMade + currentStats.freeThrowsMade,\r\n            assists: prevStats.assists + currentStats.assists,\r\n            rebounds: prevStats.rebounds + currentStats.rebounds,\r\n            steals: prevStats.steals + currentStats.steals,\r\n            blocks: prevStats.blocks + currentStats.blocks,\r\n            turnovers: prevStats.turnovers + currentStats.turnovers,\r\n            foulsDrawn: prevStats.foulsDrawn + currentStats.foulsDrawn,\r\n            foulsGiven: prevStats.foulsGiven + currentStats.foulsGiven\r\n        }\r\n    });\r\n    return {...playerData, totalPoints: playerData.threePointsMade*3 + (playerData.fieldGoalsMade - playerData.threePointsMade)*2 +  playerData.freeThrowsMade};\r\n}\r\n\r\nexport const getTotalAveragePlayerStats = (playerName: string): AveragePlayerStats => {\r\n    const matchData = parseBBallData(bballData);\r\n    var completeMatches: MatchStats[] = matchData.map(match => match.matchStats).filter(match => match.matchStatus === MatchState.Complete);\r\n\r\n    var totalStats: PlayerStats = getTotalPlayerStats(completeMatches, playerName);\r\n    return {\r\n        player: totalStats.player,\r\n        pointsPerGame: totalStats.totalPoints / matchData.length,\r\n        assistsPerGame: totalStats.assists / matchData.length,\r\n        reboundsPerGame: totalStats.rebounds / matchData.length,\r\n        blocksPerGame: totalStats.blocks / matchData.length,\r\n        stealsPerGame: totalStats.steals / matchData.length,\r\n        fieldGoalPercentage: totalStats.fieldGoalsMade / totalStats.fieldGoalsAttempted,\r\n        threePointPercentage: totalStats.threePointsMade / totalStats.threePointsAttempted,\r\n        freePointPercentage: totalStats.freeThrowsMade / totalStats.freeThrowsAttempted,\r\n        fieldGoalsAttempted: totalStats.fieldGoalsAttempted,\r\n        fieldGoalsMade: totalStats.fieldGoalsMade,\r\n        threePointsAttempted: totalStats.threePointsAttempted,\r\n        threePointsMade: totalStats.threePointsMade,\r\n        turnoversPerGame: totalStats.turnovers / matchData.length\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Match, CompleteMatchStats, MatchState, Player } from '../models/BBallModels';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Theme, createStyles, withStyles, Button, WithStyles, createMuiTheme, MuiThemeProvider, Card, Grid, IconButton, Collapse, CardContent, Modal } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport classnames from 'classnames';\r\nimport { BBallMatchStats } from './BBallMatchStats';\r\nimport { getTotalAveragePlayerStats } from '../services/BBallDataRetriever';\r\nimport { PlayerStatsModal } from './PlayerStatsModal';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing.unit * 2,\r\n    margin: '50px'\r\n  },\r\n  matchCardRight: {\r\n    textAlign: 'right',\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  matchCardMiddle: {\r\n    textAlign: 'center',\r\n  },\r\n  matchCardLeft: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  matchContainer: {\r\n    margin: '-16px',\r\n    width: '105%',\r\n  },\r\n  matchText: {\r\n    padding: '20px',\r\n    fontSize: '20px'\r\n  },\r\n  arrowIcon: {\r\n    fontSize: \"30px\",\r\n    padding: \"0px\"\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n    marginLeft: 'auto',\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n  matchData: Match;\r\n}\r\n\r\ninterface State {\r\n  expanded: boolean;\r\n  modalOpen: ModalState;\r\n  currentPlayer: Player | undefined;\r\n}\r\n\r\nexport enum ModalState {\r\n  Open, Close\r\n}\r\n\r\nexport const BBallMatchCard = withStyles(styles)(({ matchData, classes }: Props) => {\r\n\r\n  const initState: State = {\r\n    expanded: false,\r\n    modalOpen: ModalState.Close,\r\n    currentPlayer: undefined,\r\n  }\r\n\r\n  const [cardState, changeCardState] = React.useState(initState);\r\n  const matchStats = matchData.matchStats;\r\n\r\n  const handleExpandCard = () => changeCardState({\r\n    ...cardState,\r\n    expanded: !cardState.expanded\r\n  });\r\n\r\n  const handleModalAction = (modalState: ModalState, player: Player | undefined) => changeCardState({\r\n    ...cardState,\r\n    modalOpen: modalState,\r\n    currentPlayer: player,\r\n  });\r\n\r\n  return (\r\n    <>\r\n    <div>{matchData.matchNumber} {matchData.date}</div>\r\n    <Card className={classes.root}>\r\n      <Grid className={classes.matchContainer} container spacing={24}>\r\n        <Grid className={classes.matchCardLeft} item xs={4}>\r\n          <Typography className={classes.matchText}>\r\n            {matchData.homeTeam.name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={classes.matchCardMiddle} item xs={4}>\r\n          {matchStats.matchStatus === MatchState.Complete &&\r\n            <div className={classes.matchText} >{matchStats.homeTeamScore} - {matchStats.awayTeamScore}</div>\r\n          }\r\n          {matchStats.matchStatus === MatchState.Incomplete &&\r\n            <div className={classes.matchText} >VS</div>\r\n          }\r\n          <IconButton\r\n            className={classnames(classes.arrowIcon, classes.expand, {\r\n              [classes.expandOpen]: cardState.expanded,\r\n            })}\r\n            onClick={() => handleExpandCard()}\r\n            aria-expanded={cardState.expanded}\r\n            aria-label=\"Show more\"\r\n          >\r\n            <ExpandMoreIcon className={classes.arrowIcon} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid className={classes.matchCardRight} item xs={4}>\r\n          <Typography className={classes.matchText}>\r\n            {matchData.awayTeam.name}\r\n         </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Collapse in={cardState.expanded} timeout=\"auto\" unmountOnExit>\r\n        {matchStats.matchStatus === MatchState.Incomplete &&\r\n          <div>Data Not Available</div>\r\n        }\r\n        {matchStats.matchStatus === MatchState.Complete &&\r\n          <BBallMatchStats matchStats={matchStats} handleModalAction={handleModalAction}/>\r\n        }\r\n      </Collapse>\r\n    </Card>\r\n    {cardState.modalOpen == ModalState.Open && cardState.currentPlayer && <PlayerStatsModal player={cardState.currentPlayer} handleModalAction={handleModalAction}/>}\r\n    </>\r\n  )\r\n});\r\n// export default withStyles(styles)(BBallMatchCard);","import React from 'react';\r\nimport { Theme, createStyles, WithStyles, withStyles, Modal, Typography, Grid, Paper, ButtonBase } from '@material-ui/core';\r\nimport { Player } from '../models/BBallModels';\r\nimport { ModalState } from './BBallMatchCard';\r\nimport { getTotalAveragePlayerStats } from '../services/BBallDataRetriever';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n      },\r\n      paper: {\r\n        padding: theme.spacing.unit * 2,\r\n        margin: 'auto',\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        position: 'fixed',\r\n        width: theme.spacing.unit * 50,\r\n        outline: 'none',\r\n        top: '45%',\r\n        left: '45%',\r\n        marginLeft: '-150px',\r\n        marginTop: '-150px',\r\n      },\r\n});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n  player: Player;\r\n  handleModalAction: (modalState: ModalState, player: Player | undefined) => void;\r\n}\r\n\r\nexport const PlayerStatsModal = withStyles(styles)(({ player, handleModalAction, classes }: Props) => {\r\n    const playerStats = getTotalAveragePlayerStats(player.name);\r\n    return (        \r\n    <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={true}\r\n        onClose={() => handleModalAction(ModalState.Close, undefined)}\r\n      >\r\n        <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n            <Grid container spacing={40} direction=\"column\">\r\n                <Grid item xs container>\r\n                    <Grid item>\r\n                        {player.number}. {player.name}    \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs container direction=\"row\" spacing={24}\r\n                    justify=\"space-evenly\">\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>PPG</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.pointsPerGame.toFixed(3)}</strong></Typography>                    \r\n                    \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>RPG</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.reboundsPerGame.toFixed(3)}</strong></Typography>                    \r\n                    \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>APG</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.assistsPerGame.toFixed(3)}</strong></Typography>                    \r\n                        </Grid>\r\n                </Grid>\r\n                <Grid item xs container direction=\"row\" spacing={24}\r\n                    justify=\"space-evenly\">\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>FG%</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.fieldGoalPercentage.toFixed(3)}</strong>\r\n                            ({playerStats.fieldGoalsMade}/{playerStats.fieldGoalsAttempted})\r\n                            </Typography>                    \r\n                    \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>3PT%</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.threePointPercentage.toFixed(3)}</strong>\r\n                            ({playerStats.threePointsMade}/{playerStats.threePointsAttempted})\r\n                            </Typography>                    \r\n                    \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>FT%</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.freePointPercentage.toFixed(3)}</strong>\r\n                            </Typography>                    \r\n                        </Grid>\r\n                </Grid>\r\n                <Grid item xs container direction=\"row\" spacing={24}\r\n                    justify=\"space-evenly\">\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>SPG</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.stealsPerGame.toFixed(3)}</strong></Typography>                    \r\n                    \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>BPG</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.blocksPerGame.toFixed(3)}</strong></Typography>                    \r\n                    \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography style={{ cursor: 'pointer' }}>TPG</Typography>\r\n                            <Typography style={{ cursor: 'pointer' }}><strong>{playerStats.turnoversPerGame.toFixed(3)}</strong></Typography>                    \r\n                        </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n        </div>\r\n      </Modal>\r\n      )\r\n});\r\n","import React from 'react';\r\nimport { Match } from '../models/BBallModels';\r\nimport { BBallMatchCard } from './BBallMatchCard';\r\nimport './BBall.css';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\r\nimport { getTotalAveragePlayerStats } from '../services/BBallDataRetriever';\r\n\r\ninterface Props {\r\n  seasonMatches: Match[]\r\n}\r\n\r\nexport function BBallMatchPanel({ seasonMatches }: Props) {\r\n  seasonMatches.reverse(); // mutating state\r\n  console.log(getTotalAveragePlayerStats(\"Roy Aranda\"));\r\n  console.log(getTotalAveragePlayerStats(\"Alvin Soh\"));\r\n  console.log(getTotalAveragePlayerStats(\"Jeremy Soh\"));\r\n  console.log(getTotalAveragePlayerStats(\"Hussein Debel\"));\r\n  console.log(getTotalAveragePlayerStats(\"Usman Haidar\"));\r\n  console.log(getTotalAveragePlayerStats(\"Khatami Chau\"));\r\n  console.log(getTotalAveragePlayerStats(\"Tavonga Nyoka\"));\r\n\r\n  return (\r\n    <div className=\"match-panel\">\r\n      {\r\n        seasonMatches.map((match) => {\r\n          const theme = createMuiTheme({\r\n            palette: {\r\n              primary: {\r\n                // light: will be calculated from palette.primary.main,\r\n                main: match.homeTeam.colour,\r\n                // dark: will be calculated from palette.primary.main,\r\n                // contrastText: will be calculated to contrast with palette.primary.main\r\n              },\r\n              secondary: {\r\n                light: '#0066ff',\r\n                main: match.awayTeam.colour,\r\n                // dark: will be calculated from palette.secondary.main,\r\n                contrastText: '#ffcc00',\r\n              },\r\n              // error: will use the default color\r\n            },\r\n          });\r\n          return (\r\n            <MuiThemeProvider key={match.matchId}  theme={theme}>\r\n            <BBallMatchCard matchData={match} />\r\n            </MuiThemeProvider>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\n// import './BBallSeason.css';\nimport * as bballData from '../models/data.json';\nimport { BBallMatchPanel } from './BBallMatchPanel';\nimport { parseBBallData } from '../services/BBallDataRetriever';\n\n\nconst BBallSeason = () => {\n\n  const [state, setState] = React.useState({openModal: false}); \n  const matches = parseBBallData(bballData);\n  return(\n    !state.openModal ? <BBallMatchPanel seasonMatches={matches} /> : <></>\n  );\n\n}\n\nexport default BBallSeason;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/BBallSeason';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}