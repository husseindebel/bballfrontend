{"version":3,"sources":["models/BBallModels.ts","components/BBallMatchStats.tsx","components/BBallMatchCard.tsx","services/BBallDataRetriever.ts","components/BBallMatchPanel.tsx","components/BBallSeason.tsx","serviceWorker.ts","index.tsx"],"names":["MatchState","BBallMatchStats","withStyles","theme","createStyles","_ref","matchStats","classes","react_default","a","createElement","index_es","padding","align","homeTeamStats","map","n","key","player","number","component","scope","name","threePointsMade","fieldGoalsMade","freeThrowsMade","rebounds","assists","steals","blocks","fieldGoalsAttempted","isNaN","toFixed","threePointsAttempted","freeThrowsAttempted","turnovers","foulsGiven","BBallMatchCard","root","display","flexDirection","spacing","unit","margin","matchCardRight","textAlign","backgroundColor","palette","secondary","main","matchCardMiddle","matchCardLeft","primary","matchContainer","width","matchText","fontSize","arrowIcon","expand","transform","transition","transitions","create","duration","shortest","marginLeft","expandOpen","matchData","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isExpanded","changeCardState","Fragment","matchNumber","date","className","container","item","xs","Typography_default","homeTeam","matchStatus","Complete","homeTeamScore","awayTeamScore","Incomplete","classnames","defineProperty","onClick","aria-expanded","aria-label","ExpandMore_default","awayTeam","in","timeout","unmountOnExit","getTotalAveragePlayerStats","playerName","totalStats","playerData","flatMap","match","filter","playerStats","reduce","prevStats","currentStats","totalPoints","foulsDrawn","objectSpread","getTotalPlayerStats","pointsPerGame","length","assistsPerGame","reboundsPerGame","blocksPerGame","stealsPerGame","fieldGoalPercentage","threePointPercentage","freePointPercentage","BBallMatchPanel","seasonMatches","reverse","console","log","createMuiTheme","colour","light","contrastText","core_styles","matchId","BBallSeason","data","openModal","state","matches","bballData","default","status","Boolean","window","location","hostname","ReactDOM","render","components_BBallSeason","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e929b4c.chunk.js","sourcesContent":["export interface Player {\r\n    name: String;\r\n    number: number;\r\n    team: Team;\r\n}\r\n\r\nexport interface Team {\r\n    name: string;\r\n    colour: string; \r\n    players: Player[] | undefined;\r\n}\r\n\r\nexport interface Match {\r\n    matchId: number,\r\n    homeTeam: Team;\r\n    awayTeam: Team;\r\n    date: string;\r\n    status: string;\r\n    matchNumber: string;\r\n    matchStats: MatchStats;\r\n}\r\n\r\nexport enum MatchState {\r\n    Complete,\r\n    Incomplete\r\n}\r\n\r\nexport interface CompleteMatchStats {\r\n    homeTeamScore: number;\r\n    awayTeamScore: number;\r\n    homeTeamStats: PlayerStats[];\r\n    matchStatus: MatchState.Complete;\r\n}\r\n\r\nexport interface PlayerStats {\r\n    player: Player;\r\n    totalPoints: number;\r\n    fieldGoalsAttempted: number;\r\n    fieldGoalsMade: number;\r\n    threePointsAttempted: number;\r\n    threePointsMade: number;\r\n    freeThrowsAttempted: number;\r\n    freeThrowsMade: number;\r\n    assists: number;\r\n    rebounds: number;\r\n    steals: number;\r\n    blocks: number;\r\n    turnovers: number;\r\n    foulsGiven: number;\r\n    foulsDrawn: number;\r\n}\r\n\r\nexport interface AveragePlayerStats {\r\n    player: Player;\r\n    pointsPerGame: number;\r\n    assistsPerGame: number;\r\n    stealsPerGame: number;\r\n    blocksPerGame: number;\r\n    reboundsPerGame: number;\r\n    fieldGoalsAttempted: number;\r\n    fieldGoalsMade: number;\r\n    threePointsAttempted: number;\r\n    threePointsMade: number;\r\n    fieldGoalPercentage: number;\r\n    threePointPercentage: number;\r\n    freePointPercentage: number;\r\n}\r\n\r\nexport interface IncompleteMatch {\r\n    matchStatus: MatchState.Incomplete;\r\n}\r\n\r\nexport type MatchStats = CompleteMatchStats | IncompleteMatch;\r\n\r\nexport interface BBallSeason {\r\n    matches: Match[]\r\n}","import React from 'react';\r\nimport { CardContent, Typography, Theme, WithStyles, createStyles, withStyles, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { Match, CompleteMatchStats } from '../models/BBallModels';\r\nimport { getTotalAveragePlayerStats } from '../services/BBallDataRetriever';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n  matchStats: CompleteMatchStats;\r\n}\r\n\r\n/*\r\n  PTS\r\n  REB\r\n  AST\r\n  STL\r\n  BLK\r\n  FGM\r\n  FGA\r\n  FG%\r\n  3PM\r\n  3PA\r\n  3P%\r\n  FTM\r\n  FTMA\r\n  FT%\r\n  TOV\r\n*/\r\n\r\nexport const BBallMatchStats = withStyles(styles)(({ matchStats, classes }: Props) => {\r\n  return (\r\n    <CardContent>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Player Name</TableCell>\r\n            <TableCell padding='checkbox' align='center'>PTS</TableCell>\r\n            <TableCell padding='checkbox' align='center'>REB</TableCell>\r\n            <TableCell padding='checkbox' align='center'>AST</TableCell>\r\n            <TableCell padding='checkbox' align='center'>STL</TableCell>\r\n            <TableCell padding='checkbox' align='center'>BLK</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FGM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FGA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FG%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3PM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3PA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3P%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FTM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FTA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FT%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>TOV</TableCell>\r\n            <TableCell padding='checkbox' align='center'>PF</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {matchStats.homeTeamStats.map(n => {\r\n            return (\r\n              <TableRow key={n.player.number}>\r\n                <TableCell padding='checkbox' component=\"th\" scope=\"row\">\r\n                  {n.player.number}   {n.player.name}\r\n                </TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsMade*3 + (n.fieldGoalsMade - n.threePointsMade)*2 +  n.freeThrowsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.rebounds}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.assists}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.steals}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.blocks}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.fieldGoalsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.fieldGoalsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.fieldGoalsMade/n.fieldGoalsAttempted) ? 0 : \r\n                  ((n.fieldGoalsMade/n.fieldGoalsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.threePointsMade/n.threePointsAttempted) ? 0 : \r\n                  ((n.threePointsMade/n.threePointsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.freeThrowsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.freeThrowsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.freeThrowsMade/n.freeThrowsAttempted) ? 0 : \r\n                  ((n.freeThrowsMade/n.freeThrowsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.turnovers}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.foulsGiven}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </CardContent>\r\n  )\r\n});","import React from 'react';\r\nimport { Match, CompleteMatchStats, MatchState } from '../models/BBallModels';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Theme, createStyles, withStyles, Button, WithStyles, createMuiTheme, MuiThemeProvider, Card, Grid, IconButton, Collapse, CardContent } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport classnames from 'classnames';\r\nimport { BBallMatchStats } from './BBallMatchStats';\r\nimport { getTotalAveragePlayerStats } from '../services/BBallDataRetriever';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing.unit * 2,\r\n    margin: '50px'\r\n  },\r\n  matchCardRight: {\r\n    textAlign: 'right',\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  matchCardMiddle: {\r\n    textAlign: 'center',\r\n  },\r\n  matchCardLeft: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  matchContainer: {\r\n    margin: '-16px',\r\n    width: '105%',\r\n  },\r\n  matchText: {\r\n    padding: '20px',\r\n    fontSize: '20px'\r\n  },\r\n  arrowIcon: {\r\n    fontSize: \"30px\",\r\n    padding: \"0px\"\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n    marginLeft: 'auto',\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n  matchData: Match;\r\n}\r\n\r\nexport const BBallMatchCard = withStyles(styles)(({ matchData, classes }: Props) => {\r\n\r\n  const [isExpanded, changeCardState] = React.useState(false);\r\n  const matchStats = matchData.matchStats;\r\n\r\n  return (\r\n    <>\r\n    <div>{matchData.matchNumber} {matchData.date}</div>\r\n    <Card className={classes.root}>\r\n      <Grid className={classes.matchContainer} container spacing={24}>\r\n        <Grid className={classes.matchCardLeft} item xs={4}>\r\n          <Typography className={classes.matchText}>\r\n            {matchData.homeTeam.name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={classes.matchCardMiddle} item xs={4}>\r\n          {matchStats.matchStatus === MatchState.Complete &&\r\n            <div className={classes.matchText} >{matchStats.homeTeamScore} - {matchStats.awayTeamScore}</div>\r\n          }\r\n          {matchStats.matchStatus === MatchState.Incomplete &&\r\n            <div className={classes.matchText} >VS</div>\r\n          }\r\n          <IconButton\r\n            className={classnames(classes.arrowIcon, classes.expand, {\r\n              [classes.expandOpen]: isExpanded,\r\n            })}\r\n            onClick={() => changeCardState(!isExpanded)}\r\n            aria-expanded={isExpanded}\r\n            aria-label=\"Show more\"\r\n          >\r\n            <ExpandMoreIcon className={classes.arrowIcon} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid className={classes.matchCardRight} item xs={4}>\r\n          <Typography className={classes.matchText}>\r\n            {matchData.awayTeam.name}\r\n         </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\r\n        {matchStats.matchStatus === MatchState.Incomplete &&\r\n          <div>Data Not Available</div>\r\n        }\r\n        {matchStats.matchStatus === MatchState.Complete &&\r\n          <BBallMatchStats matchStats={matchStats}/>\r\n        }\r\n      </Collapse>\r\n    </Card>\r\n    </>\r\n  )\r\n});\r\n// export default withStyles(styles)(BBallMatchCard);","import { Match, MatchState, PlayerStats, CompleteMatchStats, AveragePlayerStats, MatchStats } from \"../models/BBallModels\";\r\n\r\n\r\n\r\nexport function parseBBallData(data: any): Match[] {\r\n    const matches: Match[] = data.default;\r\n    matches.map(match => {\r\n      match.status === \"complete\" ? match.matchStats.matchStatus = MatchState.Complete : match.matchStats.matchStatus = MatchState.Incomplete;    \r\n    })\r\n    return data.default;\r\n}\r\n\r\nconst getTotalPlayerStats = (matchData: MatchStats[], playerName: string): PlayerStats => {\r\n    const playerMatchData = matchData.flatMap((match) => {\r\n        if (match.matchStatus === MatchState.Incomplete) return [];\r\n        var playerMatches = match.homeTeamStats.filter((playerStats => playerStats.player.name === playerName));\r\n        return playerMatches;\r\n    });\r\n    const playerData = playerMatchData.reduce((prevStats, currentStats) => {\r\n        return {\r\n            player: prevStats.player,\r\n            fieldGoalsAttempted: prevStats.fieldGoalsAttempted + currentStats.fieldGoalsAttempted,\r\n            totalPoints: 0,\r\n            fieldGoalsMade: prevStats.fieldGoalsMade + currentStats.fieldGoalsMade,\r\n            threePointsAttempted: prevStats.threePointsAttempted + currentStats.threePointsAttempted,\r\n            threePointsMade: prevStats.threePointsMade + currentStats.threePointsMade,\r\n            freeThrowsAttempted: prevStats.freeThrowsAttempted + currentStats.freeThrowsAttempted,\r\n            freeThrowsMade: prevStats.freeThrowsMade + currentStats.freeThrowsMade,\r\n            assists: prevStats.assists + currentStats.assists,\r\n            rebounds: prevStats.rebounds + currentStats.rebounds,\r\n            steals: prevStats.steals + currentStats.steals,\r\n            blocks: prevStats.blocks + currentStats.blocks,\r\n            turnovers: prevStats.turnovers + currentStats.turnovers,\r\n            foulsDrawn: prevStats.foulsDrawn + currentStats.foulsDrawn,\r\n            foulsGiven: prevStats.foulsGiven + currentStats.foulsGiven\r\n        }\r\n    });\r\n    return {...playerData, totalPoints: playerData.threePointsMade*3 + (playerData.fieldGoalsMade - playerData.threePointsMade)*2 +  playerData.freeThrowsMade};\r\n}\r\n\r\nexport const getTotalAveragePlayerStats = (matchData: Match[], playerName: string): AveragePlayerStats => {\r\n    var completeMatches: MatchStats[] = matchData.map(match => match.matchStats).filter(match => match.matchStatus === MatchState.Complete);\r\n\r\n    var totalStats: PlayerStats = getTotalPlayerStats(completeMatches, playerName);\r\n    return {\r\n        player: totalStats.player,\r\n        pointsPerGame: totalStats.totalPoints / matchData.length,\r\n        assistsPerGame: totalStats.assists / matchData.length,\r\n        reboundsPerGame: totalStats.rebounds / matchData.length,\r\n        blocksPerGame: totalStats.blocks / matchData.length,\r\n        stealsPerGame: totalStats.steals / matchData.length,\r\n        fieldGoalPercentage: totalStats.fieldGoalsMade / totalStats.fieldGoalsAttempted,\r\n        threePointPercentage: totalStats.threePointsMade / totalStats.threePointsAttempted,\r\n        freePointPercentage: totalStats.freeThrowsMade / totalStats.freeThrowsAttempted,\r\n        fieldGoalsAttempted: totalStats.fieldGoalsAttempted,\r\n        fieldGoalsMade: totalStats.fieldGoalsMade,\r\n        threePointsAttempted: totalStats.threePointsAttempted,\r\n        threePointsMade: totalStats.threePointsMade,\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Match } from '../models/BBallModels';\r\nimport { BBallMatchCard } from './BBallMatchCard';\r\nimport './BBall.css';\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\r\nimport { getTotalAveragePlayerStats } from '../services/BBallDataRetriever';\r\n\r\ninterface Props {\r\n  seasonMatches: Match[]\r\n}\r\n\r\nexport function BBallMatchPanel({ seasonMatches }: Props) {\r\n  seasonMatches.reverse(); // mutating state\r\n  console.log(getTotalAveragePlayerStats(seasonMatches, \"Roy Aranda\"));\r\n  console.log(getTotalAveragePlayerStats(seasonMatches, \"Alvin Soh\"));\r\n  console.log(getTotalAveragePlayerStats(seasonMatches, \"Jeremy Soh\"));\r\n  console.log(getTotalAveragePlayerStats(seasonMatches, \"Hussein Debel\"));\r\n  console.log(getTotalAveragePlayerStats(seasonMatches, \"Usman Haidar\"));\r\n  console.log(getTotalAveragePlayerStats(seasonMatches, \"Khatami Chau\"));\r\n  console.log(getTotalAveragePlayerStats(seasonMatches, \"Tavonga Nyoka\"));\r\n\r\n  return (\r\n    <div className=\"match-panel\">\r\n      {\r\n        seasonMatches.map((match) => {\r\n          const theme = createMuiTheme({\r\n            palette: {\r\n              primary: {\r\n                // light: will be calculated from palette.primary.main,\r\n                main: match.homeTeam.colour,\r\n                // dark: will be calculated from palette.primary.main,\r\n                // contrastText: will be calculated to contrast with palette.primary.main\r\n              },\r\n              secondary: {\r\n                light: '#0066ff',\r\n                main: match.awayTeam.colour,\r\n                // dark: will be calculated from palette.secondary.main,\r\n                contrastText: '#ffcc00',\r\n              },\r\n              // error: will use the default color\r\n            },\r\n          });\r\n          return (\r\n            <MuiThemeProvider key={match.matchId}  theme={theme}>\r\n            <BBallMatchCard matchData={match} />\r\n            </MuiThemeProvider>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\n// import './BBallSeason.css';\nimport * as bballData from '../models/data.json';\nimport { BBallMatchPanel } from './BBallMatchPanel';\nimport { parseBBallData } from '../services/BBallDataRetriever';\n\n\nconst BBallSeason = () => {\n\n  const [state, setState] = React.useState({openModal: false}); \n  const matches = parseBBallData(bballData);\n  return(\n    !state.openModal ? <BBallMatchPanel seasonMatches={matches} /> : <></>\n  );\n\n}\n\nexport default BBallSeason;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/BBallSeason';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}