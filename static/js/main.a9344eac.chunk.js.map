{"version":3,"sources":["models/BBallModels.ts","components/BBallMatchStats.tsx","components/BBallMatchCard.tsx","components/BBallMatchPanel.tsx","components/BBallSeason.tsx","serviceWorker.ts","index.tsx"],"names":["MatchState","BBallMatchStats","withStyles","theme","createStyles","_ref","matchStats","classes","console","log","react_default","a","createElement","index_es","padding","align","homeTeamStats","map","n","key","player","number","component","scope","name","threePointsMade","fieldGoalsMade","rebounds","assists","steals","blocks","fieldGoalsAttempted","isNaN","toFixed","threePointsAttempted","freeThrowsMade","freeThrowsAttempted","turnovers","foulsGiven","BBallMatchCard","root","display","flexDirection","spacing","unit","matchCardRight","textAlign","backgroundColor","matchCardMiddle","matchCardLeft","matchContainer","margin","width","matchText","fontSize","arrowIcon","expand","transform","transition","transitions","create","duration","shortest","marginLeft","expandOpen","matchData","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isExpanded","changeCardState","className","container","item","xs","Typography_default","homeTeam","matchStatus","Complete","homeTeamScore","awayTeamScore","Incomplete","classnames","defineProperty","onClick","aria-expanded","aria-label","ExpandMore_default","in","timeout","unmountOnExit","BBallMatchPanel","seasonMatches","match","matchId","BBallSeason","data","default","status","parseBBallData","bballData","matches","Boolean","window","location","hostname","ReactDOM","render","components_BBallSeason","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9344eac.chunk.js","sourcesContent":["export interface Player {\r\n    name: String;\r\n    number: number;\r\n    team: Team;\r\n}\r\n\r\nexport interface Team {\r\n    name: string;\r\n    colour: string; \r\n    players: Player[] | undefined;\r\n}\r\n\r\nexport interface Match {\r\n    matchId: number,\r\n    homeTeam: Team;\r\n    awayTeam: Team;\r\n    date: string;\r\n    status: string;\r\n    matchStats: MatchStats;\r\n}\r\n\r\nexport enum MatchState {\r\n    Complete,\r\n    Incomplete\r\n}\r\n\r\nexport interface CompleteMatchStats {\r\n    homeTeamScore: number;\r\n    awayTeamScore: number;\r\n    homeTeamStats: PlayerStats[];\r\n    matchStatus: MatchState.Complete;\r\n}\r\n\r\nexport interface PlayerStats {\r\n    player: Player;\r\n    totalPoints: number;\r\n    fieldGoalsAttempted: number;\r\n    fieldGoalsMade: number;\r\n    threePointsAttempted: number;\r\n    threePointsMade: number;\r\n    freeThrowsAttempted: number;\r\n    freeThrowsMade: number;\r\n    assists: number;\r\n    rebounds: number;\r\n    steals: number;\r\n    blocks: number;\r\n    turnovers: number;\r\n    foulsGiven: number;\r\n    foulsDrawn: number;\r\n}\r\n\r\nexport interface IncompleteMatch {\r\n    matchStatus: MatchState.Incomplete;\r\n}\r\n\r\ntype MatchStats = CompleteMatchStats | IncompleteMatch;\r\n\r\nexport interface BBallSeason {\r\n    matches: Match[]\r\n}","import React from 'react';\r\nimport { CardContent, Typography, Theme, WithStyles, createStyles, withStyles, Table, TableHead, TableRow, TableCell, TableBody } from '@material-ui/core';\r\nimport { Match, CompleteMatchStats } from '../models/BBallModels';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n  matchStats: CompleteMatchStats;\r\n}\r\n\r\n/*\r\n  PTS\r\n  REB\r\n  AST\r\n  STL\r\n  BLK\r\n  FGM\r\n  FGA\r\n  FG%\r\n  3PM\r\n  3PA\r\n  3P%\r\n  FTM\r\n  FTMA\r\n  FT%\r\n  TOV\r\n*/\r\n\r\nexport const BBallMatchStats = withStyles(styles)(({ matchStats, classes }: Props) => {\r\n  console.log(matchStats);\r\n  return (\r\n    <CardContent>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Player Name</TableCell>\r\n            <TableCell padding='checkbox' align='center'>PTS</TableCell>\r\n            <TableCell padding='checkbox' align='center'>REB</TableCell>\r\n            <TableCell padding='checkbox' align='center'>AST</TableCell>\r\n            <TableCell padding='checkbox' align='center'>STL</TableCell>\r\n            <TableCell padding='checkbox' align='center'>BLK</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FGM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FGA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FG%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3PM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3PA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>3P%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FTM</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FTA</TableCell>\r\n            <TableCell padding='checkbox' align='center'>FT%</TableCell>\r\n            <TableCell padding='checkbox' align='center'>TOV</TableCell>\r\n            <TableCell padding='checkbox' align='center'>PF</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {matchStats.homeTeamStats.map(n => {\r\n            return (\r\n              <TableRow key={n.player.number}>\r\n                <TableCell padding='checkbox' component=\"th\" scope=\"row\">\r\n                  {n.player.number}   {n.player.name}\r\n                </TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsMade*3 + (n.fieldGoalsMade - n.threePointsMade)*2}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.rebounds}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.assists}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.steals}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.blocks}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.fieldGoalsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.fieldGoalsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.fieldGoalsMade/n.fieldGoalsAttempted) ? 0 : \r\n                  ((n.fieldGoalsMade/n.fieldGoalsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.threePointsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.threePointsMade/n.threePointsAttempted) ? 0 : \r\n                  ((n.threePointsMade/n.threePointsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.freeThrowsMade}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.freeThrowsAttempted}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{\r\n                  isNaN(n.freeThrowsMade/n.freeThrowsAttempted) ? 0 : \r\n                  ((n.freeThrowsMade/n.freeThrowsAttempted)*100).toFixed(2)}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.turnovers}</TableCell>\r\n                <TableCell padding='checkbox' align='center'>{n.foulsGiven}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </CardContent>\r\n  )\r\n});","import React from 'react';\r\nimport { Match, CompleteMatchStats, MatchState } from '../models/BBallModels';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Theme, createStyles, withStyles, Button, WithStyles, createMuiTheme, MuiThemeProvider, Card, Grid, IconButton, Collapse, CardContent } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport classnames from 'classnames';\r\nimport { BBallMatchStats } from './BBallMatchStats';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  matchCardRight: {\r\n    textAlign: 'right',\r\n    backgroundColor: 'grey',\r\n  },\r\n  matchCardMiddle: {\r\n    textAlign: 'center',\r\n  },\r\n  matchCardLeft: {\r\n    backgroundColor: 'gold',\r\n  },\r\n  matchContainer: {\r\n    margin: '-16px',\r\n    width: '105%',\r\n  },\r\n  matchText: {\r\n    padding: '20px',\r\n    fontSize: '20px'\r\n  },\r\n  arrowIcon: {\r\n    fontSize: \"30px\",\r\n    padding: \"0px\"\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n    marginLeft: 'auto',\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n  matchData: Match;\r\n}\r\n\r\n\r\nexport const BBallMatchCard = withStyles(styles)(({ matchData, classes }: Props) => {\r\n  const [isExpanded, changeCardState] = React.useState(false);\r\n  const matchStats = matchData.matchStats;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Grid className={classes.matchContainer} container spacing={24}>\r\n        <Grid className={classes.matchCardLeft} item xs={4}>\r\n          <Typography className={classes.matchText}>\r\n            {matchData.homeTeam.name}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={classes.matchCardMiddle} item xs={4}>\r\n          {matchStats.matchStatus === MatchState.Complete &&\r\n            <div className={classes.matchText} >{matchStats.homeTeamScore} - {matchStats.awayTeamScore}</div>\r\n          }\r\n          {matchStats.matchStatus === MatchState.Incomplete &&\r\n            <div className={classes.matchText} >VS</div>\r\n          }\r\n          <IconButton\r\n            className={classnames(classes.arrowIcon, classes.expand, {\r\n              [classes.expandOpen]: isExpanded,\r\n            })}\r\n            onClick={() => changeCardState(!isExpanded)}\r\n            aria-expanded={isExpanded}\r\n            aria-label=\"Show more\"\r\n          >\r\n            <ExpandMoreIcon className={classes.arrowIcon} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid className={classes.matchCardRight} item xs={4}>\r\n          <Typography className={classes.matchText}>\r\n            No Presence\r\n         </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Collapse in={isExpanded} timeout=\"auto\" unmountOnExit>\r\n        {matchStats.matchStatus === MatchState.Incomplete &&\r\n          <div>Data Not Available</div>\r\n        }\r\n        {matchStats.matchStatus === MatchState.Complete &&\r\n          <BBallMatchStats matchStats={matchStats}/>\r\n        }\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n});\r\n// export default withStyles(styles)(BBallMatchCard);","import React from 'react';\r\nimport { Match } from '../models/BBallModels';\r\nimport { BBallMatchCard } from './BBallMatchCard';\r\nimport './BBall.css';\r\n\r\ninterface Props {\r\n  seasonMatches: Match[]\r\n}\r\n\r\nexport function BBallMatchPanel({ seasonMatches }: Props) {\r\n  return (\r\n    <div className=\"match-panel\">\r\n      {\r\n        seasonMatches.map((match) => {\r\n          return (\r\n            <BBallMatchCard key={match.matchId} matchData={match} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react';\n// import './BBallSeason.css';\nimport * as bballData from '../models/data.json';\nimport { PlayerStats, Match, MatchState } from '../models/BBallModels';\nimport { BBallMatchPanel } from './BBallMatchPanel';\n\n\nfunction BBallSeason() {\n\n  const [matches, setMatches] = React.useState([parseBBallData(bballData)] as Match[]); \n\n  function parseBBallData(data: any): Match {\n    const match: Match = data.default;\n    match.status === \"complete\" ? match.matchStats.matchStatus = MatchState.Complete : match.matchStats.matchStatus = MatchState.Incomplete;    \n    return data.default;\n  }\n\n  return(  \n      <BBallMatchPanel seasonMatches={matches} />\n  );\n\n}\n\nexport default BBallSeason;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/BBallSeason';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}